package com.sihabudin.itask.component

import androidx.compose.foundation.background
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.grid.GridCells
import androidx.compose.foundation.lazy.grid.LazyVerticalGrid
import androidx.compose.foundation.lazy.grid.items
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Card
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Brush
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.sihabudin.itask.core.domain.model.CategoryWithCountTaskModel
import com.sihabudin.itask.core.utils.Common
import com.sihabudin.itask.theme.Netral40
import com.sihabudin.itask.theme.WhiteEndGradient
import com.sihabudin.itask.theme.WhiteStartGradient

@Composable
fun LazyGridHome(
    modifier: Modifier = Modifier,
    categoryTaskList: List<CategoryWithCountTaskModel>,
    onClick: (CategoryWithCountTaskModel) -> Unit = {},
) {
    LazyVerticalGrid(columns = GridCells.Fixed(2), content = {
        items(categoryTaskList, key = { it.id_category }) { category ->
            LazyGridHomeItem(categoryTask = category, onClick = onClick)
        }
    })
}

@Composable
fun LazyGridHomeItem(
    modifier: Modifier = Modifier,
    categoryTask: CategoryWithCountTaskModel,
    onClick: (CategoryWithCountTaskModel) -> Unit = {},
) {
    Card(
        modifier = Modifier
            .padding(8.dp)
            .height(150.dp)
            .fillMaxWidth()
            .clickable {
                onClick(categoryTask)
            },
        shape = RoundedCornerShape(20.dp)
    ) {
        Box(
            modifier = Modifier
                .background(
                    brush = Brush.verticalGradient(colors = Common.gradientColorList(colorLabel = categoryTask.colorLabel.lowercase()))
                )
                .height(150.dp)
                .width(150.dp)
        ) {
            Box(modifier = Modifier.align(Alignment.Center)) {
                Text(
                    text = categoryTask.category,
                    modifier = Modifier.align(Alignment.Center),
                    fontSize = 30.sp,
                )
            }
            Box(
                modifier = Modifier
                    .padding(8.dp)
                    .width(25.dp)
                    .height(25.dp)
                    .background(
                        brush = Brush.verticalGradient(
                            colors = listOf(WhiteStartGradient, WhiteEndGradient)
                        ), shape = CircleShape
                    )
                    .align(Alignment.BottomEnd),
            ) {
                Text(
                    modifier = Modifier
                        .align(Alignment.Center),
                    text = categoryTask.totalTask.toString(),
                    fontSize = 12.sp,
                    color = Netral40,
                )
            }

        }
    }
}

@Composable
@Preview(showBackground = true)
fun LazyGridHomeItemPreview() {
    val data = CategoryWithCountTaskModel(
        id_category = 1,
        category = "Home",
        colorLabel = "purple",
        totalTask = 30
    )
    val data2 = CategoryWithCountTaskModel(
        id_category = 2,
        category = "Work",
        colorLabel = "blue",
        totalTask = 20
    )
    val data3 = CategoryWithCountTaskModel(
        id_category = 3,
        category = "Personal",
        colorLabel = "Red",
        totalTask = 10
    )
    val data4 = CategoryWithCountTaskModel(
        id_category = 4,
        category = "Learn",
        colorLabel = "Yellow",
        totalTask = 30
    )
    LazyGridHome(categoryTaskList = listOf(data3, data2, data, data4))
}
